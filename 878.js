// for (leetcode) 874. Walking Robot Simulation
// more: https://leetcode.com/problems/walking-robot-simulation/
// by Maer
// CC BY 2.0
// made with p5.js
// data: https://leetcode-cn.com/submissions/detail/49951162/testcase/
function setup(){
    rectMode(RADIUS)
    canvas_scale = 5
    size = 4
    obstacles=[[-57,-58],[-72,91],[-55,35],[-20,29],[51,70],[-61,88],[-62,99],[52,17],[-75,-32],[91,-22],[54,33],[-45,-59],[47,-48],[53,-98],[-91,83],[81,12],[-34,-90],[-79,-82],[-15,-86],[-24,66],[-35,35],[3,31],[87,93],[2,-19],[87,-93],[24,-10],[84,-53],[86,87],[-88,-18],[-51,89],[96,66],[-77,-94],[-39,-1],[89,51],[-23,-72],[27,24],[53,-80],[52,-33],[32,4],[78,-55],[-25,18],[-23,47],[79,-5],[-23,-22],[14,-25],[-11,69],[63,36],[35,-99],[-24,82],[-29,-98],[-50,-70],[72,95],[80,80],[-68,-40],[65,70],[-92,78],[-45,-63],[1,34],[81,50],[14,91],[-77,-54],[13,-88],[24,37],[-12,59],[-48,-62],[57,-22],[-8,85],[48,71],[12,1],[-20,36],[-32,-14],[39,46],[-41,75],[13,-23],[98,10],[-88,64],[50,37],[-95,-32],[46,-91],[10,79],[-11,43],[-94,98],[79,42],[51,71],[4,-30],[2,74],[4,10],[61,98],[57,98],[46,43],[-16,72],[53,-69],[54,-96],[22,0],[-7,92],[-69,80],[68,-73],[-24,-92],[-21,82],[32,-1],[-6,16],[15,-29],[70,-66],[-85,80],[50,-3],[6,13],[-30,-98],[-30,59],[-67,40],[17,72],[79,82],[89,-100],[2,79],[-95,-46],[17,68],[-46,81],[-5,-57],[7,58],[-42,68],[19,-95],[-17,-76],[81,-86],[79,78],[-82,-67],[6,0],[35,-16],[98,83],[-81,100],[-11,46],[-21,-38],[-30,-41],[86,18],[-68,6],[80,75],[-96,-44],[-19,66],[21,84],[-56,-64],[39,-15],[0,45],[-81,-54],[-66,-93],[-4,2],[-42,-67],[-15,-33],[1,-32],[-74,-24],[7,18],[-62,84],[19,61],[39,79],[60,-98],[-76,45],[58,-98],[33,26],[-74,-95],[22,30],[-68,-62],[-59,4],[-62,35],[-78,80],[-82,54],[-42,81],[56,-15],[32,-19],[34,93],[57,-100],[-1,-87],[68,-26],[18,86],[-55,-19],[-68,-99],[-9,47],[24,94],[92,97],[5,67],[97,-71],[63,-57],[-52,-14],[-86,-78],[-17,92],[-61,-83],[-84,-10],[20,13],[-68,-47],[7,28],[66,89],[-41,-17],[-14,-46],[-72,-91],[4,52],[-17,-59],[-85,-46],[-94,-23],[-48,-3],[-64,-37],[2,26],[76,88],[-8,-46],[-19,-68]];
    x_list = obstacles.map(value => Math.abs(value[0]))
    y_list = obstacles.map(value => Math.abs(value[1]))
    createCanvas(Math.max(...x_list)*2*canvas_scale,Math.max(...y_list)*2*canvas_scale)
    positions = [[0,0],[0, 1],[0, 3],[0, 3],[-5, 3],[-5, 3],[-5, 3],[-5, 3],[-5, 11],[-5, 14],[-5, 14],[4, 14],[8, 14],[8, 14],[8, 17],[8, 19],[8, 23],[8, 26],[8, 35],[8, 37],[8, 37],[8, 37],[8, 37],[9, 37],[12, 37],[12, 37],[12, 41],[12, 42],[12, 46],[12, 46],[13, 46],[22, 46],[22, 46],[22, 46],[27, 46],[27, 46],[27, 41],[27, 36],[27, 36],[33, 36],[39, 36],[46, 36],[53, 36],[55, 36],[62, 36],[62, 36],[62, 36],[62, 29],[62, 25],[62, 19],[62, 10],[62, 1],[62, -8],[62, -8],[57, -8],[56, -8],[53, -8],[50, -8],[50, -8],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[44, -4],[36, -4],[32, -4],[26, -4],[24, -4],[17, -4],[15, -4],[15, -4],[15, 3],[15, 3],[12, 3],[9, 3],[7, 3],[7, 3],[7, -3],[7, -12],[7, -20],[7, -21],[7, -21],[7, -21],[7, -22],[7, -26],[7, -33]]
    obstacles_activated_indices = [46,46,104,104,104,104,104,104,104,104,104,104,104,104,104,104]
    // obstacles_activated_indices = [147, 10]
    background("white");
    translate(width/2,height/2)

    push()
    noStroke()
    fill("blue")
    for(let i=0;i<obstacles.length;i++){
        rect(obstacles[i][0]*size,invert(obstacles[i][1])*size,4,4)
        push()
        fill("white")
        rect(obstacles[i][0]*size,invert(obstacles[i][1])*size,1,1)
        pop()
    }
    pop()

    push()
    noStroke()
    fill("red")
    for(let i=0;i<obstacles_activated_indices.length;i++){
        obstacle = obstacles[obstacles_activated_indices[i]]
        rect(obstacle[0]*size,invert(obstacle[1])*size,4,4)
        push()
        fill("white")
        rect(obstacle[0]*size,invert(obstacle[1])*size,1,1)
        pop()
    }
    pop()

    push()
    stroke("blue")
    fill("white")
    for(let i=0;i<positions.length-1;i++){
        start=positions[i]
        end=positions[i+1]
        line(start[0]*size,invert(start[1])*size,end[0]*size,invert(end[1])*size)
        ellipse(start[0]*size,invert(start[1])*size,3)
        ellipse(end[0]*size,invert(end[1])*size,3)
    }
    pop()

    push()
    noStroke()
    fill("blue")
    textAlign(CENTER, CENTER)
    text("start",0,0+10)
    pop()
}

function invert(y){
    return y*-1
}
  function setup(){
      rectMode(RADIUS)
      canvas_scale = 5
      size = 4
      obstacles=[[-57,-58],[-72,91],[-55,35],[-20,29],[51,70],[-61,88],[-62,99],[52,17],[-75,-32],[91,-22],[54,33],[-45,-59],[47,-48],[53,-98],[-91,83],[81,12],[-34,-90],[-79,-82],[-15,-86],[-24,66],[-35,35],[3,31],[87,93],[2,-19],[87,-93],[24,-10],[84,-53],[86,87],[-88,-18],[-51,89],[96,66],[-77,-94],[-39,-1],[89,51],[-23,-72],[27,24],[53,-80],[52,-33],[32,4],[78,-55],[-25,18],[-23,47],[79,-5],[-23,-22],[14,-25],[-11,69],[63,36],[35,-99],[-24,82],[-29,-98],[-50,-70],[72,95],[80,80],[-68,-40],[65,70],[-92,78],[-45,-63],[1,34],[81,50],[14,91],[-77,-54],[13,-88],[24,37],[-12,59],[-48,-62],[57,-22],[-8,85],[48,71],[12,1],[-20,36],[-32,-14],[39,46],[-41,75],[13,-23],[98,10],[-88,64],[50,37],[-95,-32],[46,-91],[10,79],[-11,43],[-94,98],[79,42],[51,71],[4,-30],[2,74],[4,10],[61,98],[57,98],[46,43],[-16,72],[53,-69],[54,-96],[22,0],[-7,92],[-69,80],[68,-73],[-24,-92],[-21,82],[32,-1],[-6,16],[15,-29],[70,-66],[-85,80],[50,-3],[6,13],[-30,-98],[-30,59],[-67,40],[17,72],[79,82],[89,-100],[2,79],[-95,-46],[17,68],[-46,81],[-5,-57],[7,58],[-42,68],[19,-95],[-17,-76],[81,-86],[79,78],[-82,-67],[6,0],[35,-16],[98,83],[-81,100],[-11,46],[-21,-38],[-30,-41],[86,18],[-68,6],[80,75],[-96,-44],[-19,66],[21,84],[-56,-64],[39,-15],[0,45],[-81,-54],[-66,-93],[-4,2],[-42,-67],[-15,-33],[1,-32],[-74,-24],[7,18],[-62,84],[19,61],[39,79],[60,-98],[-76,45],[58,-98],[33,26],[-74,-95],[22,30],[-68,-62],[-59,4],[-62,35],[-78,80],[-82,54],[-42,81],[56,-15],[32,-19],[34,93],[57,-100],[-1,-87],[68,-26],[18,86],[-55,-19],[-68,-99],[-9,47],[24,94],[92,97],[5,67],[97,-71],[63,-57],[-52,-14],[-86,-78],[-17,92],[-61,-83],[-84,-10],[20,13],[-68,-47],[7,28],[66,89],[-41,-17],[-14,-46],[-72,-91],[4,52],[-17,-59],[-85,-46],[-94,-23],[-48,-3],[-64,-37],[2,26],[76,88],[-8,-46],[-19,-68]];
      x_list = obstacles.map(value => Math.abs(value[0]))
      y_list = obstacles.map(value => Math.abs(value[1]))
      createCanvas(Math.max(...x_list)*2*canvas_scale,Math.max(...y_list)*2*canvas_scale)
      positions = [[0,0],[0, 1],[0, 3],[0, 3],[-5, 3],[-5, 3],[-5, 3],[-5, 3],[-5, 11],[-5, 14],[-5, 14],[4, 14],[8, 14],[8, 14],[8, 17],[8, 19],[8, 23],[8, 26],[8, 35],[8, 37],[8, 37],[8, 37],[8, 37],[9, 37],[12, 37],[12, 37],[12, 41],[12, 42],[12, 46],[12, 46],[13, 46],[22, 46],[22, 46],[22, 46],[27, 46],[27, 46],[27, 41],[27, 36],[27, 36],[33, 36],[39, 36],[46, 36],[53, 36],[55, 36],[62, 36],[62, 36],[62, 36],[62, 29],[62, 25],[62, 19],[62, 10],[62, 1],[62, -8],[62, -8],[57, -8],[56, -8],[53, -8],[50, -8],[50, -8],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[50, -4],[44, -4],[36, -4],[32, -4],[26, -4],[24, -4],[17, -4],[15, -4],[15, -4],[15, 3],[15, 3],[12, 3],[9, 3],[7, 3],[7, 3],[7, -3],[7, -12],[7, -20],[7, -21],[7, -21],[7, -21],[7, -22],[7, -26],[7, -33]]
      obstacles_activated_indices = [46,46,104,104,104,104,104,104,104,104,104,104,104,104,104,104]
      // obstacles_activated_indices = [147, 10]
      background("white");
      translate(width/2,height/2)

      push()
      noStroke()
      fill("blue")
      for(let i=0;i<obstacles.length;i++){
          rect(obstacles[i][0]*size,invert(obstacles[i][1])*size,4,4)
          push()
          fill("white")
          rect(obstacles[i][0]*size,invert(obstacles[i][1])*size,1,1)
          pop()
      }
      pop()

      push()
      noStroke()
      fill("red")
      for(let i=0;i<obstacles_activated_indices.length;i++){
          obstacle = obstacles[obstacles_activated_indices[i]]
          rect(obstacle[0]*size,invert(obstacle[1])*size,4,4)
          push()
          fill("white")
          rect(obstacle[0]*size,invert(obstacle[1])*size,1,1)
          pop()
      }
      pop()

      push()
      stroke("blue")
      fill("white")
      for(let i=0;i<positions.length-1;i++){
          start=positions[i]
          end=positions[i+1]
          line(start[0]*size,invert(start[1])*size,end[0]*size,invert(end[1])*size)
          ellipse(start[0]*size,invert(start[1])*size,3)
          ellipse(end[0]*size,invert(end[1])*size,3)
      }
      pop()

      push()
      noStroke()
      fill("blue")
      textAlign(CENTER, CENTER)
      text("start",0,0+10)
      pop()
  }

  function invert(y){
      return y*-1
  }